# -*- coding: utf-8 -*-
"""POSSIBLE  CONCEPTS  PROGRAM (NEW)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1njBN2rop0DD7ziUJOuriagfxP-Ppy5_R
"""

#FUNCTION 1 WORKING FOR ALL FILES
#def remove_nouns_pronouns_connectors_particles(file_name):
#SPECIAL STATUS: Remove : [pronouns, connectors, particles]
ignore_list =["hI", "BI","wo","na","kevala","Ora", "kyoMki", "nahIM","isalie", "lekina", "paranwu", "kiMwu", "yaxi", "wo", "agara","wo", "jaba","waba", "yaxyapi","waWApi","evaM", "waWA", "yA", "Pira", "cUMki", "awaH","para","wyax", "kim","speaker", "addressee", "eka+xusarA", "apanA","Kuxa","yaha","vaha","hI_1", "BI_1","wo_1","na_1","kevala_1","Ora_1", "kyoMki_1", "nahIM_1","isalie_1", "lekina_1", "paranwu_1", "kiMwu_1", "yaxi_1", "wo_1", "agara_1","wo_1", "jaba_1","waba_1", "yaxyapi_1","waWApi_1","evaM_1", "waWA_1", "yA_1", "Pira_1", "cUMki_1", "awaH_1","para_1","wyax_1", "kim_1","speaker_1", "addressee_1", "eka+xusarA_1", "apanA_1","Kuxa_1","yaha_1","vaha_1"]
# IF a Concept's 4th row element has : [per, org, ne, place, any, dow, moy, yoc,dom,calendric_unit,clock_time] then remove it from nf_list
# so creating a dict out of concpet[i] : 4throw[i]

def f1(file_name):
    nouns_list = []
    con_list = []
    ignore_list =["hI", "BI","wo","na","kevala","Ora", "kyoMki", "isalie", "lekina", "paranwu", "kiMwu", "yaxi", "wo", "agara","wo", "jaba","waba", "yaxyapi","waWApi","evaM", "waWA", "yA", "Pira", "cUMki", "awaH","para","wyax", "kim","speaker", "addressee", "eka+xusarA", "apanA","Kuxa","yaha","vaha"]
    with open("8stnd_2ch_ncert/"+file_name, "r") as j:
      names = ["per", "org", "ne", "place", "any", "dow", "moy", "yoc","dom","calendric_unit","clock_time"]
      lines = j.readlines()
      for line in lines:
              con_list = lines[1].split(',')
              nouns_list = lines[3].split(',')
      print(nouns_list)
      replacement_count = 1
      try:

        for i, element in enumerate(nouns_list):
            if element == '':
              nouns_list[i] = f'N/A_{replacement_count}'
              replacement_count += 1
        print(con_list)
        print(nouns_list)
        nouns_list[-1] = nouns_list[-1].rstrip("\n")
        print(nouns_list)
      except:
        print("SOME UNKNOWN ERROR")

      # DICTIONARY
      dictionary = {}
      for key, value in zip(con_list, nouns_list):
          dictionary[key] = value
      print("DICT:",dictionary)
      for key, value in dictionary.items():
        if value in names:
            print(key+": is a proper noun kind")
            con_list.remove(key)

      print(con_list)

    #REMOVING IGNORE LIST ELEMENTS FROM CONCEPTS
      try:

        for con in con_list:
          if con in ignore_list:
            print(con," in ignore list")
            con_list.remove(con)
        con_list[-1] = con_list[-1].rstrip("\n")
        print(">>>>>",con_list)
        print("\n")
      except:
        print("SOME UNKNOWN ERROR2")
    return con_list
#JUST ONE MORE STEP --> GIVE A CONCEPT LIST WHICH MY OTHER FUNCTION CAN USE AS INPUT

# FUNCTION 2 TRYING
def f2(con_list,file_name):
    with open('H_concept-to-mrs-rels.dat', "r") as f:
      #con_list =[ 'pqWvI', 'sabasA_1', 'pawalA_1','parawa_1', 'hE_1-0_hE_1-0_hE_1']
      hin_cons = []
      lines = f.readlines()
      for hcn in con_list:
        count = 0
        for i in range(142001):
            element = lines[i].split(" ")
            if hcn == element[1] :
              hin_cons.append(element[1])
              count = count + 1
            else:
              pass
        if count == 0:
          hin_cons.append(hcn+":NotinCD")

      unique_cons = []
      print(hin_cons)
      for item in hin_cons:
          if item not in unique_cons:
              unique_cons.append(item)
      print(unique_cons)
      hin_cons = unique_cons
    # list checker -->Check if both elements contain ":NotinCD"
    last_two_elements = hin_cons[-2:]
    try:
      if last_two_elements[0] == last_two_elements[1] and all(":NotinCD" in element for element in last_two_elements):
        print("TAM REPEATED TWICE'")
        verb_concept = last_two_elements[1].split("-")[0]
        hin_cons.append(verb_concept)
        del hin_cons[-2:]
    except:
      print("PASSED")
    print(hin_cons)


    for element in hin_cons:
        if element.count("-") == 2 or element.count("-") == 1:
          verb_con = element.split("-")[0]
          hin_cons.remove(element)
          hin_cons.append(verb_con)
    print("-->",hin_cons)

    hin_cons = [element for element in hin_cons if ":NotinCD" not in element]

    print("-->",hin_cons)

    # Check if the element contains '+' and split it and add new splits without removing old element
    updated_list = []
    for element in con_list:
      updated_list.append(element)
      if '+' in element:
        sub_elements = element.split('+')
        updated_list.extend(sub_elements)
    print(updated_list)

    plain_hin = []
    for concept in updated_list:
      plain = concept.split("_")
      plain_hin.append(plain[0]+"_")
    print(plain_hin)
    print("\n")

    #TWO APPROACHES --- USE hin_cons directly // USE plain_hin? kya karen?
    #LETS USE SECOND ONE EH...
    possibe_cons = []
    with open('H_concept-to-mrs-rels.dat', "r") as g:
          lines = g.readlines()
          for hcn in plain_hin:
            count = 0

            for i in range(142001):
              try:
                element = lines[i].split(" ")
                hmrs_plain = element[1].split("_")
                matchey = hmrs_plain[0]+"_"
                if hcn in element[1] and hcn[0] == element[1][0] and hcn[1] == element[1][1] and hcn == matchey:
                  #print(matchey)
                  lines[i] = lines[i].replace("cl-cEn-MRSc ", "").replace("\n", "")
                  possibe_cons.append(lines[i])
                  count = count + 1
              except:
                  print("SOME UNKNOWN ERROR")

            print(">>>>>",possibe_cons)
            try:
              with open( "8stnd_2ch_ncert/"+file_name, 'a') as f:
                  for element in possibe_cons:
                    f.write(element+'\n')
            except:
              print("SOME UNKNOWN ERROR #2nd time")
            possibe_cons = []


    return possibe_cons

import os
#concepts = ['yaha','PEla_1-yA_1-yA_1', 'wApamAna_1', 'kama_1', 'ho_1-wA_hE_1-wA_hE_1']#second_line.split(',')
for file_name in os.listdir("8stnd_2ch_ncert/"):
  print(file_name)
  #con_list = ['lEtina', 'Sabxa_1', 'garimA_1', 'jo_4', 'arWa_1', 'hE_1-0_hE_1-0_hE_1', 'agni_1']
  concepts = f1(file_name)
  f2(concepts,file_name)
  print("\n\n\n")

# con_list = ['pqWvI', 'uRNa_1+katibaMXIya_1', 'sabasA_1', 'pawalA_1', 'parawa_1', 'hE_1-0_hE_1-0_hE_1', 'vikasiwa_1+ho_1-0_hE_1']
# updated_list = []
# for element in con_list:
#     updated_list.append(element)
#     if '+' in element:
#         sub_elements = element.split('+')
#         updated_list.extend(sub_elements)

# print(updated_list)